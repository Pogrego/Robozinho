#include <QTRSensors.h>

// This example is designed for use with six analog QTR sensors. These
// reflectance sensors should be connected to analog pins A0 to A5. The
// sensors' emitter control pin (CTRL or LEDON) can optionally be connected to
// digital pin 2, or you can leave it disconnected and remove the call to
// setEmitterPin().
//
// The main loop of the example reads the raw sensor values (uncalibrated). You
// can test this by taping a piece of 3/4" black electrical tape to a piece of
// white paper and sliding the sensor across it. It prints the sensor values to
// the serial monitor as numbers from 0 (maximum reflectance) to 1023 (minimum
// reflectance).

QTRSensors qtr;
const uint8_t SensorCount = 4;
uint16_t sensorValues[SensorCount];
int f1 = 0;
int timer;

void setup()
{
  // configure the sensors
  qtr.setTypeAnalog();
  qtr.setSensorPins((const uint8_t[]){A0, A1, A2, A3}, SensorCount);
  qtr.setEmitterPin(2);

  qtr.resetCalibration();
    for (uint16_t i = 0; i < 400; i++)
    {
      qtr.calibrate();
    }
    


  Serial.begin(9600);
}


void loop()
{
  // read raw sensor values
  uint16_t position = qtr.readLineWhite(sensorValues);

//Frente
if((position > 1000 && position < 2000) && (f1 ==0) )
  {
    Serial.println("FRENTE"); 
  }
//gira 1 sentido  
  if(position < 1000)                     
  {
Serial.println("GIRA LADO"); 
  }
//gira outro sentido
  if(position > 2000)                     
  {
Serial.println("GIRA OUTRO LADO"); 
  }
//Condicao de Parada
  if(sensorValues[0] < 600 && sensorValues[1] < 600 && sensorValues[2] < 600 && sensorValues[3] < 600)
  {
    if (millis() - timer >= 1000)
    {
      if(sensorValues[0] < 600 && sensorValues[1] < 600 && sensorValues[2] < 600 && sensorValues[3] < 600){
      f1 = 1;
      Serial.println("PARE!"); 
      }
    }
  }

  // print the sensor values as numbers from 0 to 1023, where 0 means maximum
  // reflectance and 1023 means minimum reflectance
  for (uint8_t i = 0; i < SensorCount; i++)
  {
    Serial.print(sensorValues[i]);
    Serial.print('\t');
  }
  Serial.println();

  delay(250);
}
