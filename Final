// GRUPO 5 - SEGUIDOR DE LINHA //
// Autores:
//          Paulo Grego
//          Wellington
//          Murilo
// Ultima modificação: 11/10/2019

//AVISO! NÃO USAR PINOS 5 E 6 DO ARDUINO

// ************* //
//   Pinagem     //
// ************* //

//ponteH(motor1)
#define MOTOR_1A PA2    
#define MOTOR_1B PA3    
#define PWM_1    HIGH
    
//ponteH(motor2)
#define MOTOR_2A PA6     
#define MOTOR_2B PA7    
#define PWM_2    HIGH   
 
//ponteH(motor1)
#define S1  PB3                //Sensor1
#define S2  PB5               //Sensor2
#define S3  PB6                //Sensor3
#define S4  PB8                //Sensor4
#define S5  PB9               //Sensor5
int IR[6];                     //Leituras infravermelho
boolean flag;                  //Encontra linha horizontal

// ************************* //
//   Constantes e structs    //
// ************************* //
#define TEMPO_DELAY   500      //Constante de tempo
#define VALOR_PWM     255      //Valor de PWM
#define TEMPO_DE_GIRO 200      // 1000 = aprox 90 graus
#define FRENTE_PWM    230      // Bambeamento para em 230
#define FRENTE        HIGH
#define TRAS          LOW

typedef struct motor{
  int pinoA, pinoB, pinoPWM;
} Motor;
Motor motorEsq, motorDir;

void setup() 
{
// ************************** //
//  inicializa infravermelho  //
// ************************** //
  pinMode(S1, INPUT);
  pinMode(S2, INPUT);
  pinMode(S3, INPUT);
  pinMode(S4, INPUT);
  pinMode(S5, INPUT);

// ************************** //
//     inicializa motores     //
// ************************** //
  //motor A
  motorEsq.pinoA = MOTOR_1A;
  motorEsq.pinoB = MOTOR_1B;
   
  pinMode(motorEsq.pinoA, OUTPUT);
  pinMode(motorEsq.pinoB, OUTPUT);
  pinMode(motorEsq.pinoPWM, OUTPUT);
  analogWrite (motorEsq.pinoPWM, 1);
    
  //motor B
  motorDir.pinoA = MOTOR_2A;
  motorDir.pinoB = MOTOR_2B;
  
  pinMode(motorDir.pinoA, OUTPUT);
  pinMode(motorDir.pinoB, OUTPUT);
  pinMode(motorDir.pinoPWM, OUTPUT);

  analogWrite (motorDir.pinoPWM, 1);
}

void loop() 
{
// ******************** //  
//     Entrada (IR)     //
// ******************** //    
  IR[0] = 0;                //erro do sensor
  IR[1] = digitalRead(S1);  //sensor esquerda extrema
  IR[2] = digitalRead(S2);  //sensor esquerda
  IR[3] = digitalRead(S3);  //sensor central
  IR[4] = digitalRead(S4);  //sensor direita
  IR[5] = digitalRead(S5);  //sensor direita  extrema 
  
// ********************** //
//  Controle Proporcional //
// ********************** //
// CASO 1: Apenas sensor central = seguindo em frente
  if(IR[3] == 1 && IR[1] == 0 && IR[2] == 0 && IR[4] == 0 && IR[5] == 0) 
  {
    IR[0] = 0;
    delay(TEMPO_DELAY); 
  }
// CASO 2: Sensores da esq(1,2) = girar a direita
  else if((IR[1]==1 || IR[2]==1))
  {
    IR[0] = IR[0] - 1;
    delay(TEMPO_DELAY); 
  }
// CASO 3: Sensores da dir(4,5) = girar a esquerda  
  else if((IR[4]==1 || IR[5]==1))
  {
    IR[0] = IR[0] + 1;
    delay(TEMPO_DELAY); 
  }
// CASO 4: Sensores encontram linha horizontal
  else if((IR[2]==1 && IR[3]==1) && IR[4]==1)
  { 
    flag = 1;
    IR[0] = 0;
    delay(TEMPO_DELAY); 
  }

// ******************** //
//    Saida (Motores)   //
// *******************  //
  //CASO 4: Freia
  if(flag == 1)    
  {
      digitalWrite(motorEsq.pinoA, LOW);
      digitalWrite(motorEsq.pinoB, LOW);
  
      analogWrite(motorDir.pinoA,  LOW);
      digitalWrite(motorDir.pinoB, LOW);      
  }
  else
  {
    if(IR[0])//CASO 1: seguindo em frente
    {
      digitalWrite(motorEsq.pinoA, FRENTE);
      digitalWrite(motorEsq.pinoB, !(FRENTE));
  
      analogWrite(motorDir.pinoA, FRENTE_PWM);
      digitalWrite(motorDir.pinoB, !(FRENTE));  
    }
    else if(IR[0]<0)//CASO 2: girar a direita
    {
      digitalWrite(motorEsq.pinoA, FRENTE);
      digitalWrite(motorEsq.pinoB, !(FRENTE));
  
      digitalWrite(motorDir.pinoA, TRAS);
      analogWrite (motorDir.pinoB, FRENTE_PWM);       
    }
    else if(IR[0]>0) //CASO 3: girar a esquerda  
    {
      digitalWrite(motorEsq.pinoA, TRAS);
      digitalWrite(motorEsq.pinoB, !(TRAS));
  
      analogWrite(motorDir.pinoA, FRENTE_PWM);
      digitalWrite(motorDir.pinoB, !(FRENTE));       
    }
  }
// -----------------------------------------------------------------------  
// ********************** //
//      TESTES            //
// ********************** //

// ************************************  //
// Teste 1: motor anda p/ frente         //
// Resultado: Bambeamento para           //
// FRENTE_PWM = 230 em motorDir.pinoA    //
// OBS: Alinhar rodas brancas p/ frente  //
// ************************************* //
//  digitalWrite(motorEsq.pinoA, FRENTE);
//  digitalWrite(motorEsq.pinoB, !(FRENTE));
//  
//  analogWrite(motorDir.pinoA, FRENTE_PWM);
//  digitalWrite(motorDir.pinoB, !(FRENTE));

// ********************************************** //
// Teste 2: motor gira e então anda p/ frente     //
// Resultado: Embora a funcao girar funcione,     //
// o giro desalinha uma das rodas brancas e       //
// o robo não volta p/ inicio torto               //
// OBS: Ocorre menos qto menor o delay. Talvez    //
// n seja problema dependendo do controle de IR   //
// ********************************************** //
//      digitalWrite(motorEsq.pinoA, TRAS);
//      digitalWrite(motorEsq.pinoB, !(TRAS));
//  
//      analogWrite(motorDir.pinoA, FRENTE_PWM);
//      digitalWrite(motorDir.pinoB, !(FRENTE));
//      delay(200);
//      
//      digitalWrite(motorEsq.pinoA, FRENTE);
//      digitalWrite(motorEsq.pinoB, !(FRENTE));
//  
//      analogWrite(motorDir.pinoA, FRENTE_PWM);
//      digitalWrite(motorDir.pinoB, !(FRENTE));     
//      delay(200);

  
// -----------------------------------------------------------------------  

        
}
